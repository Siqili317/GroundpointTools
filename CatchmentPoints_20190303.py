# -*- #################
# ---------------------------------------------------------------------------
# Catchment Points Model Builder code.py
# Created on: 2018-11-13 16:02:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Catchment Points Model Builder code <Input_Surface> <Input_Flow_Direction> <Watershed_Raster> <Watershed_Polygons> <Culvert_Points> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy
from arcpy.sa import *
from arcpy import env

# Check out the ArcGIS Spatial Analyst extension license
arcpy.CheckOutExtension("Spatial")

# Local variables:
Input_Surface = arcpy.GetParameterAsText(0)
Input_Flow_Direction = arcpy.GetParameterAsText(1)
Culvert_Points = arcpy.GetParameterAsText(2)
SurveyID = arcpy.GetParameterAsText(3)
Output_workspace = arcpy.GetParameterAsText(4)
Output_name = arcpy.GetParameterAsText(5)
Output_iter = arcpy.GetParameterAsText(6)
MergedPol = arcpy.GetParameterAsText(7)



# Set Geoprocessing environments
arcpy.env.snapRaster = Input_Surface
arcpy.env.extent = Input_Surface
arcpy.env.cellSize = Input_Surface
arcpy.env.mask = Input_Surface
arcpy.env.overwriteOutput = True
arcpy.env.workspace = Output_workspace

# Set output names
Watershed_Polygons = Output_name+"_"+Output_iter+ "_poly"

# Processes:

if str(MergedPol) =='false':
    # Process: Watershed
    arcpy.AddMessage("Running all catchment points")
    Watershed_Raster = Watershed(Input_Flow_Direction, Culvert_Points,SurveyID)
    # Process: Raster to Polygon
    arcpy.RasterToPolygon_conversion(Watershed_Raster, "in_memory/pols", "SIMPLIFY", "VALUE")
    arcpy.Dissolve_management("in_memory/pols",Watershed_Polygons,"gridcode")

else:
    arcpy.AddMessage("Running each catchment point")
    # LOOP through each culvert point
    dt = Culvert_Points
    field = SurveyID
    
    cursor = arcpy.da.SearchCursor(dt,["SHAPE@",field])
    for row in cursor:
        arcpy.AddMessage("Processing surveyID "+str(row[1]))
        single_water_pol = Watershed_Polygons+"_"+str(row[1])
        single_water_raster = Watershed(Input_Flow_Direction, row[0] )
        single_water_raster = Con(single_water_raster ,row[1])
        arcpy.RasterToPolygon_conversion(single_water_raster, "in_memory/single_pol", "SIMPLIFY", "VALUE")
        #added 0302
        arcpy.Dissolve_management("in_memory/single_pol",single_water_pol,"gridcode")
    # Process: Merge
    arcpy.AddMessage("Running Merge")
    findname = Watershed_Polygons+"_*"
    mergename = Watershed_Polygons+"_Merged"
    feature_classes = arcpy.ListFeatureClasses(findname)
    arcpy.Merge_management(feature_classes, mergename)
    for fea in feature_classes:
        arcpy.Delete_management(str(fea))
    
    




